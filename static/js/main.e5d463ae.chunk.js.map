{"version":3,"sources":["store/actions/index.js","store/types/index.js","components/CardList/Card/index.js","components/CardList/index.js","components/Searchbox/index.js","components/Scroll/index.js","components/ErrorBoundary/index.js","components/Header/index.js","containers/App/index.js","serviceWorker.js","store/reducers/index.js","store/index.js","index.js"],"names":["setSearchField","text","type","payload","getRobots","dispatch","fetch","then","res","json","robots","catch","error","Card","_ref","id","name","email","react_default","a","createElement","className","alt","src","concat","CardList","map","r","Object","objectSpread","key","robot","CardList_Card","SearchBox","searchChange","onChange","placeholder","Scroll","children","style","flexGrow","display","flexDirection","minHeight","padding","overflow","ErrorBoundary","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","setState","Component","Header","App","e","target","value","filerRobots","searchField","filter","toLowerCase","includes","_this$props","_this$props2","isPending","filteredRobots","message","Header_Header","Searchbox","toConsumableArray","Array","keys","i","components_Scroll","components_ErrorBoundary","components_CardList","connect","store","searchRobots","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialStateSearch","initialStateRobots","reducers","arguments","length","undefined","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","allReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e5d463ae.chunk.js","sourcesContent":["import {\r\n  CHANGE_SEARCH_FIELD,\r\n  GET_ROBOTS,\r\n  GET_ROBOTS_SUCCESS,\r\n  GET_ROBOTS_FAILURE\r\n} from '../types';\r\n\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const getRobots = dispatch => {\r\n  dispatch({ type: GET_ROBOTS });\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(res => res.json())\r\n    .then(robots => dispatch({ type: GET_ROBOTS_SUCCESS, payload: robots }))\r\n    .catch(error => {\r\n      dispatch({ type: GET_ROBOTS_FAILURE, payload: error });\r\n    });\r\n};\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const GET_ROBOTS = 'GET_ROBOTS';\r\nexport const GET_ROBOTS_SUCCESS = 'GET_ROBOTS_SUCCESS';\r\nexport const GET_ROBOTS_FAILURE = 'GET_ROBOTS_FAILURE';\r\n","import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n        <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => (\r\n    <div>\r\n        {robots\r\n            .map(r => ({ key: r.id, ...r }))\r\n            .map(robot =>\r\n                <Card {...robot} />\r\n            )}\r\n    </div>\r\n);\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => (\r\n  <div className='pa2'>\r\n    <input\r\n      onChange={searchChange}\r\n      className='pa3 ba b--green bg-lightest-blue'\r\n      type='search'\r\n      placeholder='Search robots'\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = ({ children }) => (\r\n  <div\r\n    style={{\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      minHeight: 0,\r\n      padding: '10px 0'\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        flexGrow: 1,\r\n        overflow: 'auto',\r\n        minHeight: 0\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oooops. That is not good!</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n  render() {\r\n    return <h1 className='f2'>RoboFriends</h1>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setSearchField, getRobots } from '../../store/actions';\r\n\r\nimport CardList from '../../components/CardList';\r\nimport SearchBox from '../../components/Searchbox';\r\nimport Scroll from '../../components/Scroll';\r\nimport ErrorBoundary from '../../components/ErrorBoundary';\r\nimport Header from '../../components/Header';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    robots: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { dispatch, getRobots } = this.props;\r\n    getRobots(dispatch);\r\n  }\r\n\r\n  searchChange = e => {\r\n    const { setSearchField } = this.props;\r\n    setSearchField(e.target.value);\r\n  };\r\n\r\n  filerRobots = (robots, searchField) =>\r\n    robots.filter(robot =>\r\n      robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n\r\n  render() {\r\n    const { filerRobots, searchChange } = this;\r\n    const { searchField, robots, isPending, error } = this.props;\r\n\r\n    const filteredRobots = filerRobots(robots, searchField);\r\n\r\n    if (error) {\r\n      return (\r\n        <div className='tc'>\r\n          <h1 className='f1'>{error.message}</h1>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return isPending ? (\r\n      <div className='tc'>\r\n        <h1 className='f1'>Loading...</h1>\r\n      </div>\r\n    ) : (\r\n      <div className='tc aspect-ratio--object flex flex-column'>\r\n        <div>\r\n          <Header />\r\n          <SearchBox searchChange={searchChange} />\r\n        </div>\r\n        {[...Array(5).keys()].map(i => (\r\n          <div key={i} className='w-100 bt' />\r\n        ))}\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  store => ({\r\n    searchField: store.searchRobots.searchField,\r\n    robots: store.getRobots.robots,\r\n    isPending: store.getRobots.isPending,\r\n    error: store.getRobots.error\r\n  }),\r\n  dispatch => ({\r\n    setSearchField,\r\n    getRobots,\r\n    dispatch\r\n  })\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  GET_ROBOTS,\r\n  GET_ROBOTS_SUCCESS,\r\n  GET_ROBOTS_FAILURE\r\n} from '../types';\r\n\r\nconst initialStateSearch = {\r\n  searchField: ''\r\n};\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRobots = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: ''\r\n};\r\n\r\nexport const getRobots = (state = initialStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case GET_ROBOTS:\r\n      return { ...state, isPending: true };\r\n    case GET_ROBOTS_SUCCESS:\r\n      return { ...state, robots: action.payload, isPending: false };\r\n    case GET_ROBOTS_FAILURE:\r\n      return { ...state, error: action.payload, isPending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default {\r\n  searchRobots,\r\n  getRobots\r\n};\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport allReducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers(allReducers);\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'tachyons';\n\nimport './index.css';\n\nimport App from './containers/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}